name: Swift Sonar Analysis
on:
  workflow_call:
    inputs:
      SERVICE_LOCATION:
        description: 'Swift package location'
        required: true
        type: string
      SONAR_URL:
        required: false
        type: string
        default: 'https://sonarcloud.io'
      PROJECT_KEY:
        required: false
        type: string
        default: "mosip_${{ github.event.repository.name }}"
      PROJECT_NAME:
        required: false
        type: string
        default: "${{ github.event.repository.name }}"
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_ORGANIZATION:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
  SONAR_URL: ${{ inputs.SONAR_URL }}

jobs:
  sonar-analysis:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Sonar Scanner
        run: brew install sonar-scanner
      
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Check if Environmental Variables are Set
        run: | 
          if [[ -z $SONAR_TOKEN ]]; then
            echo "SONAR_TOKEN environment variable not set; EXITING.";
            exit 1;
          fi
          if [[ -z $SONAR_ORGANIZATION ]]; then
            echo "SONAR_ORGANIZATION environment variable not set; EXITING.";
            exit 1;
          fi
          if [[ -z $SONAR_URL ]]; then
            echo "SONAR_URL environment variable not set; EXITING.";
            exit 1;
          fi
      
      - name: Generate Code Coverage
        run: |
          cd ${{ inputs.SERVICE_LOCATION }}
          swift test --enable-code-coverage
          xcrun llvm-profdata merge -sparse .build/debug/codecov/default.profdata -o .build/debug/codecov/profdata.profdata
          xcrun llvm-cov export -instr-profile=.build/debug/codecov/profdata.profdata -format="lcov" .build/debug/*PackageTests.xctest/Contents/MacOS/*PackageTests > coverage.xml

      - name: Run Sonar Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd ${{ inputs.SERVICE_LOCATION }}
          sonar-scanner \
            -Dsonar.projectKey=${{ inputs.PROJECT_KEY }} \
            -Dsonar.projectName=${{ inputs.PROJECT_NAME }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.sources=Sources \
            -Dsonar.language=swift
            -Dsonar.swift.file.suffixes=.swift
            -Dsonar.host.url=${{ inputs.SONAR_URL }} \
            -Dsonar.swift.coverage.reportPaths=coverage.xml \
            -Dsonar.sourceEncoding=UTF-8
      
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: "${{ github.event_name != 'pull_request' && failure() }}" # Pick up events even if the job fails or is canceled.